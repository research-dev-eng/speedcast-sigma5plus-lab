---
# Need to create a task to install the required packages
# and then run the playbook to install the packages
- name: Sigma5+ lab setup
  hosts: iperfs  # This playbook is for setting up the Sigma5+ lab environment
  become: True
  tags: iperfs

  vars:
    iperf_script_dir: "/etc/telegraf/telegraf.conf.d"
    iperf_script_tcp: "iperf3-tcp-conf.sh"
    iperf_script_udp: "iperf3-udp-conf.sh"
    iperf_script_tcp_path: "{{ iperf_script_dir }}/{{ iperf_script_tcp }}"
    iperf_script_udp_path: "{{ iperf_script_dir }}/{{ iperf_script_udp }}"
    iperf_remote_ip: "192.168.1.7"
    iperf_bw: "1G"
    iperf_time: "60s"

  tasks:
    - name: Create scadmin user
      user:
        name: scadmin
        state: present
        shell: /bin/bash
        groups: sudo
        append: yes
        password: "{{ 'scadmin_password' | password_hash('sha512') }}"

    - name: Install required packages
      apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - iperf3
          - python3-pip
        state: present

    - name: Download InfluxData GPG key
      get_url:
        url: https://repos.influxdata.com/influxdata-archive.key
        dest: /tmp/influxdata-archive.key
        mode: '0644'

    - name: Verify InfluxData GPG key checksum
      shell: |
        echo "943666881a1b8d9b849b74caebf02d3465d6beb716510d86a39f6c8e8dac7515  /tmp/influxdata-archive.key" | sha256sum -c -
      
    - name: Convert GPG key to dearmored format
      shell: |
        cat /tmp/influxdata-archive.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive.gpg > /dev/null

    - name: Add InfluxData repository
      copy:
        dest: /etc/apt/sources.list.d/influxdata.list
        content: |
          deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive.gpg] https://repos.influxdata.com/debian stable main

    - name: Update apt cache after adding InfluxData repo
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install telegraf
      apt:
        name: telegraf
        state: present
      notify: Restart Telegraf

    - name: Ensure Telegraf service is enabled and started
      systemd:
        name: telegraf
        state: started
        enabled: yes
      notify: Restart Telegraf

    - name: Create directory for Telegraf configuration scripts
      file:
        path: "/etc/telegraf/telegraf.conf.d/"
        state: directory
        mode: '0755'      

    - name: Copy iperf3 TCP configuration script
      copy:
        dest: "{{ iperf_script_tcp_path }}"
        content: |
          #!/bin/bash
          iperf3 -c {{ iperf_remote_ip }} -t {{ iperf_time }} -b {{ iperf_bw }} -p 5201 -J
        mode: '0755'

    - name: Copy iperf3 UDP configuration script
      copy:
        dest: "{{ iperf_script_udp_path }}"
        content: |
          #!/bin/bash
          iperf3 -u -c {{ iperf_remote_ip }} -t {{ iperf_time }} -b {{ iperf_bw }} -p 5202 -J
        mode: '0755'

    - name: Create systemd service for iperf3 TCP
      template:
        src: templates/iperf3-tcp.service.j2
        dest: /etc/systemd/system/iperf3-tcp.service
        mode: '0644'
      notify: Reload systemd daemon

    - name: Create systemd service for iperf3 UDP
      template:
        src: templates/iperf3-udp.service.j2
        dest: /etc/systemd/system/iperf3-udp.service
        mode: '0644'
      notify: Reload systemd daemon

    - name: Enable and start iperf3 TCP service
      systemd:
        name: iperf3-tcp
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Enable and start iperf3 UDP service
      systemd:
        name: iperf3-udp
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Restart Telegraf
      service:
        name: telegraf
        state: restarted

    - name: Restart Grafana
      service:
        name: grafana-server
        state: restarted

    - name: Restart Prometheus
      service:
        name: prometheus
        state: restarted

- name: Grafana/prometheus setup
  hosts: monitors  # This playbook is for setting up Grafana and Prometheus
  become: True
  tags: monitors

  tasks:
    - name: Create scadmin user
      user:
        name: scadmin
        state: present
        shell: /bin/bash
        groups: sudo
        append: yes
        password: "{{ 'scadmin_password' | password_hash('sha512') }}"

     - name: Install required APT packages for Grafana repo
      apt:
        name:
          - apt-transport-https
          - software-properties-common
          - wget
        state: present
        update_cache: yes

    - name: Ensure /etc/apt/keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and install Grafana GPG key
      shell: |
        wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /etc/apt/keyrings/grafana.gpg > /dev/null
      args:
        creates: /etc/apt/keyrings/grafana.gpg

    - name: Add Grafana APT repository
      copy:
        dest: /etc/apt/sources.list.d/grafana.list
        content: |
          deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main

    - name: Update apt cache after adding Grafana repo
      apt:
        update_cache: yes

    - name: Install Grafana Enterprise
      apt:
        name: grafana-enterprise
        state: present
      notify: Restart Grafana

    - name: Install Prometheus
      apt:
        name: prometheus
        state: present

    - name: Insert telegraf IP address into prometheus.yml
      blockinfile:
        path: /etc/prometheus/prometheus.yml
        insertafter: '^  - job_name: "telegraf-iperf"'
        block: |
          static_configs:
            - targets: ["192.168.1.9:9273"]
            - targets: ["192.168.1.9:9274"]
            - targets: ["192.168.1.9:9275"]
      notify: Restart Prometheus
